<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.gsi.hive.platform.player</groupId>
	<artifactId>hive-player-service</artifactId>
	<version>2.96.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Hive Player Service</name>
	<url>https://github.com/gsi-io/hive-player</url>

	<parent>
		<groupId>io.gsi</groupId>
		<artifactId>parent</artifactId>
		<version>2.5.0</version>
	</parent>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub gsi-io Maven Packages</name>
			<url>https://maven.pkg.github.com/gsi-io/hive-player</url>
		</repository>
	</distributionManagement>

	<properties>
		<gsi-commons.version>2.8.0</gsi-commons.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>16.0.1</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>io.gsi</groupId>
			<artifactId>commons</artifactId>
			<version>${gsi-commons.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>DB</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>drop-db-before-test-if-any</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<!-- need to use push db to drop the registry one -->
									<url>jdbc:postgresql://localhost:5432/push</url>
									<username>push</username>
									<password>local</password>
									<autocommit>true</autocommit>
									<sqlCommand>drop database if exists hive_player_test</sqlCommand>
									<!-- ignore error when database does not exist -->
									<onError>continue</onError>
								</configuration>
							</execution>
							<execution>
								<id>create-db</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<url>jdbc:postgresql://localhost:5432/push</url>
									<username>push</username>
									<password>local</password>
									<!-- no transaction -->
									<autocommit>true</autocommit>
									<sqlCommand>create database hive_player_test</sqlCommand>
								</configuration>
							</execution>
							<execution>
								<id>create-schema</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<url>jdbc:postgresql://localhost:5432/hive_player_test</url>
									<username>push</username>
									<password>local</password>
									<autocommit>true</autocommit>
									<srcFiles>
										<srcFile>src/main/resources/db/player/schema-postgres.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>DOCKER</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>filter-dockerfile</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/resources/docker</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>1.4.10</version>
						<configuration>
							<repository>ghcr.io/gsi-io/hive-player-service</repository>
							<!--suppress MavenModelInspection -->
							<contextDirectory>${project.build.directory}/..</contextDirectory>
							<googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
							<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
						</configuration>
						<executions>
							<execution>
								<id>build</id>
								<phase>deploy</phase>
								<goals>
									<goal>build</goal>
									<goal>tag</goal>
									<goal>push</goal>
								</goals>
								<configuration>
									<!--suppress UnresolvedMavenProperty -->
									<tag>${git.commit.id.abbrev}</tag>
								</configuration>
							</execution>
							<execution>
								<id>tag-version</id>
								<phase>deploy</phase>
								<goals>
									<goal>tag</goal>
									<goal>push</goal>
								</goals>
								<configuration>
									<tag>${project.version}</tag>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>javax.activation</groupId>
								<artifactId>activation</artifactId>
								<version>1.1.1</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
